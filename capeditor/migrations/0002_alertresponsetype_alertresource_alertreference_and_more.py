# Generated by Django 4.1.7 on 2023-02-20 19:01

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields


class Migration(migrations.Migration):

    dependencies = [
        ('wagtaildocs', '0012_uploadeddocument'),
        ('capeditor', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AlertResponseType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('response_type', models.CharField(choices=[('shelter', 'Shelter - Take shelter in place or per instruction'), ('evacuate', 'Evacuate - Relocate as instructed in the instruction'), ('prepare', 'Prepare - Relocate as instructed in the instruction'), ('execute', 'Execute - Execute a pre-planned activity identified in instruction'), ('avoid', 'Avoid - Avoid the subject event as per the instruction'), ('monitor', 'Monitor - Attend to information sources as described in instruction'), ('assess', 'Assess - Evaluate the information in this message - DONT USE FOR PUBLIC ALERTS'), ('all_clear', 'All Clear - The subject event no longer poses a threat or concern and any follow on action is described in instruction'), ('None', 'No action recommended')], help_text='The code denoting the type of action recommended for the target audience', max_length=100)),
                ('alert', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='response_types', to='capeditor.alert')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AlertResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('resource_type', models.CharField(blank=True, help_text='Resource type whether is image, file etc', max_length=100, null=True)),
                ('resource_desc', models.TextField(help_text='The text describing the type and content of the resource file')),
                ('link', models.URLField(blank=True, help_text='The identifier of the hyperlink for the resource file', null=True)),
                ('derefUri', models.TextField(blank=True, help_text='The base-64 encoded data content of the resource file', null=True)),
                ('digest', models.TextField(blank=True, help_text="The code representing the digital digest ('hash') computed from the resource file", null=True)),
                ('alert', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='capeditor.alert')),
                ('file', models.ForeignKey(blank=True, help_text='File, Document etc', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.document')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AlertReference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('alert', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='references', to='capeditor.alert')),
                ('ref_alert', models.ForeignKey(blank=True, help_text='Earlier alert referenced by this alert', null=True, on_delete=django.db.models.deletion.PROTECT, to='capeditor.alert')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AlertPolygon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(help_text='Label for the polygon', max_length=100)),
                ('polygon', models.TextField(help_text='The paired values of points defining a polygon that delineates the affected area of the alert message')),
                ('alert', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='polygons', to='capeditor.alert')),
            ],
        ),
        migrations.CreateModel(
            name='AlertIncident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('title', models.CharField(help_text='Title of the incident referent of the alert', max_length=255)),
                ('description', models.TextField(help_text='Description of the incident')),
                ('alert', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='incidents', to='capeditor.alert')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AlertGeocode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name for the geocode', max_length=100)),
                ('value', models.CharField(help_text='Value of the geocode', max_length=255)),
                ('alert', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='geocodes', to='capeditor.alert')),
            ],
        ),
        migrations.CreateModel(
            name='AlertCircle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(help_text='Label for the circle', max_length=100)),
                ('circle', models.TextField(help_text='The paired values of a point and radius delineating the affected area of the alert message')),
                ('alert', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='circles', to='capeditor.alert')),
            ],
        ),
    ]
